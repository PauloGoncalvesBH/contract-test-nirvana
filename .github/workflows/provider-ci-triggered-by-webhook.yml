name: Provider contract test performed via webhook

# https://docs.pact.io/pact_broker/overview/#webhooks

# When a new contract is published by the consumer (frontend) it was not executed
# with any version of the provider, so the pactflow runs a webhook that calls this
# pipeline and runs the provider contract test (clients-service), directly downloading
# the new contract (via 'pactUrl') and publishing the result to pactflow at the end.

# With this it is possible to guarantee that every new contract published is
# compatible or not with the version of the production provider.

# Using this webhook event allows the changed pact to be tested against the head, test and production versions of the provider, 
# in the same way as the consumer version selectors allow the head, test and production versions of the pact to be tested against a version of the provider.

on:
  repository_dispatch:
    types: [contract_requiring_verification_published]

jobs:
  test-contract:
    runs-on: ubuntu-22.04
    name: Run provider contract

    steps:
      - name: Project checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
      - run: docker-compose build provider-test-contract
      - name: Run provider contract test
        run: make provider-test-contract
        env:
          PACT_URL: ${{ github.event.client_payload.pactUrl }}
          GIT_COMMIT: ${{ github.event.client_payload.sha }}
          GIT_BRANCH: ${{ github.event.client_payload.branch }}
          DESCRIPTION: ${{ github.event.client_payload.message }}
          PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
